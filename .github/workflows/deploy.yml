name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/dantarowallet
  DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
  DEPLOY_USER: ${{ secrets.DEPLOY_USER }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Generate version
      id: version
      run: |
        VERSION=$(date +%Y%m%d)-${GITHUB_SHA::7}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
    
    - name: Send Telegram notification - Build Complete
      if: always()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          üî® Build ${{ job.status }}
          
          Repository: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Version: ${{ steps.version.outputs.version }}
          
          ${{ job.status == 'success' && '‚úÖ Docker image built and pushed successfully!' || '‚ùå Build failed!' }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ env.DEPLOY_HOST }}
        username: ${{ env.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          cd /opt/dantarowallet
          
          # Backup current env
          cp .env .env.backup
          
          # Pull latest image
          docker pull ${{ env.DOCKER_IMAGE }}:${{ needs.build.outputs.version }}
          
          # Update docker-compose.yml
          sed -i "s|image: .*|image: ${{ env.DOCKER_IMAGE }}:${{ needs.build.outputs.version }}|g" docker-compose.prod.yml
          
          # Deploy with zero downtime
          docker-compose -f docker-compose.prod.yml up -d --no-deps --scale app=2 app
          sleep 30
          docker-compose -f docker-compose.prod.yml up -d --no-deps app
          
          # Cleanup old containers
          docker system prune -f
          
          # Health check
          sleep 10
          curl -f http://localhost:8000/health || exit 1
    
    - name: Send Telegram notification - Deploy Complete
      if: always()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          üöÄ Deployment ${{ job.status }}
          
          Version: ${{ needs.build.outputs.version }}
          Server: ${{ env.DEPLOY_HOST }}
          
          ${{ job.status == 'success' && '‚úÖ Deployment successful!' || '‚ùå Deployment failed!' }}
